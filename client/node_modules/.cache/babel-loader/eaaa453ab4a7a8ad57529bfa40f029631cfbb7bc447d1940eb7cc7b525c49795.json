{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Insert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Insert() {\n  _s();\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState('');\n  const navigate = useNavigate();\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Upload image to Cloudinary\n      const formData = new FormData();\n      formData.append('file', image);\n      formData.append('upload_preset', 'images__preset');\n      formData.append('cloud_name', 'dntzl5ras');\n      const cloudinaryResponse = await axios.post('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', formData);\n      const imageUrl = cloudinaryResponse.data.secure_url;\n\n      // Send image data to backend\n      const token = localStorage.getItem('token');\n      const headers = {\n        'auth-token': token,\n        'Content-Type': 'application/json'\n      };\n      const backendResponse = await axios.post('http://localhost:8000/api/image', {\n        link: imageUrl,\n        title: title\n      }, {\n        headers: headers\n      });\n      if (backendResponse.data.success) {\n        navigate('/Display'); // Use navigate to redirect\n      } else {\n        alert('Error in posting image');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mycard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card res-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload the image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Enter title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Insert, \"SOGXWjZoTwHESt6ynGjFU/7+BEw=\", false, function () {\n  return [useNavigate];\n});\n_c = Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Insert","_s","image","setImage","title","setTitle","link","setLink","navigate","handleImageChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","cloudinaryResponse","post","imageUrl","data","secure_url","token","localStorage","getItem","headers","backendResponse","success","alert","error","console","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Insert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function Insert() {\r\n  const [image, setImage] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [link, setLink] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleImageChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Upload image to Cloudinary\r\n      const formData = new FormData();\r\n      formData.append('file', image);\r\n      formData.append('upload_preset', 'images__preset');\r\n      formData.append('cloud_name', 'dntzl5ras');\r\n      const cloudinaryResponse = await axios.post(\r\n        'https://api.cloudinary.com/v1_1/dntzl5ras/image/upload',\r\n        formData\r\n      );\r\n      const imageUrl = cloudinaryResponse.data.secure_url;\r\n\r\n      // Send image data to backend\r\n      const token = localStorage.getItem('token');\r\n      const headers = {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json',\r\n      };\r\n      const backendResponse = await axios.post(\r\n        'http://localhost:8000/api/image',\r\n        { link: imageUrl, title: title },\r\n        { headers: headers }\r\n      );\r\n\r\n      if (backendResponse.data.success) {\r\n        navigate('/Display'); // Use navigate to redirect\r\n      } else {\r\n        alert('Error in posting image');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mycard\">\r\n          <div className=\"card res-card\">\r\n            <h2>Upload the image</h2>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Enter title\"\r\n            />\r\n            <input type=\"file\" onChange={handleImageChange} />\r\n            <button type=\"submit\">Upload</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}