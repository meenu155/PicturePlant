{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const response = await axios.post('/displayimages');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Display Images \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.imageUrl,\n        alt: `Image ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 44\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 36\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 14\n  }, this);\n};\n_s(Display, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Display","_s","images","setImages","fetchImages","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Display = () => {\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchImages();\r\n    }, []);\r\n\r\n    const fetchImages = async() => {\r\n        try {\r\n            const response = await axios.post('/displayimages');\r\n            setImages(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching images:', error);\r\n        }\r\n    };\r\n\r\n    return ( <\r\n        div >\r\n        <\r\n        h1 > Display Images < /h1> <\r\n        div > {\r\n            images.map((image, index) => ( <\r\n                img key = { index }\r\n                src = { image.imageUrl }\r\n                alt = { `Image ${index}` }\r\n                />\r\n            ))\r\n        } <\r\n        /div> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default Display;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZQ,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,gBAAgB,CAAC;MACnDH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBAAST,OAAA;IAAAW,QAAA,gBAELX,OAAA;MAAAW,QAAA,EACI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAAf,OAAA;MAAAW,QAAA,GACtB,GAAC,EACFR,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAAOlB,OAAA;QAE3BmB,GAAG,EAAKF,KAAK,CAACG,QAAU;QACxBC,GAAG,EAAM,SAAQH,KAAM;MAAG,GAFdA,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACJ,CAAC,EACL,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACb,EAAA,CA/BID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}