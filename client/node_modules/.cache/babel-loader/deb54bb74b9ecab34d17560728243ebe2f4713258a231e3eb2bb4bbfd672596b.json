{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Insert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Insert() {\n  _s();\n  const [image, setimage] = useState(\"\");\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState(\"\");\n  const navigate = useNavigate();\n  const HandleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"images__preset\");\n    data.append(\"cloud_name\", \"dntzl5ras\");\n    fetch(\"https://api.cloudinary.com/v1_1/dntzl5ras/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data.secure_url); // the link\n      setLink(data.secure_url);\n    }).catch(err => {\n      console.log(err);\n    });\n    //for mongodb purpose\n    try {\n      const token = localStorage.getItem('token');\n      console.log(token);\n      const headers = {\n        'auth-token': token,\n        'Content-Type': 'application/json'\n      };\n      console.log(title, link);\n      const response = await fetch('http://localhost:8000/api/image', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n          link: link,\n          title: title\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error uploading image');\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: HandleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mycard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card res-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload the image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Enter title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => console.log(setimage(e.target.files[0]))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Insert, \"OzmJ69PJDTNyX169G0yTYPAFLLY=\", false, function () {\n  return [useNavigate];\n});\n_c = Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Insert","_s","image","setimage","title","setTitle","link","setLink","navigate","HandleSubmit","e","preventDefault","data","FormData","append","fetch","method","body","then","res","json","console","log","secure_url","catch","err","token","localStorage","getItem","headers","response","JSON","stringify","ok","Error","error","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","files","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Insert.js"],"sourcesContent":["import React ,{useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nexport default function Insert() {\r\n    const [image,setimage]=useState(\"\")\r\n    const [title, setTitle] = useState('');\r\n    const [link,setLink]=useState(\"\")\r\n    const navigate = useNavigate();\r\n    const HandleSubmit=async(e)=>{\r\n        e.preventDefault()\r\n       const data=new FormData()\r\n       data.append(\"file\",image)\r\n       data.append(\"upload_preset\",\"images__preset\")\r\n       data.append(\"cloud_name\",\"dntzl5ras\")\r\n       fetch(\"https://api.cloudinary.com/v1_1/dntzl5ras/image/upload\",{\r\n        method:\"post\",\r\n        body:data\r\n       })\r\n       .then((res)=>res.json())\r\n       .then((data)=>{\r\n        console.log(data.secure_url)// the link\r\n        setLink(data.secure_url)\r\n       })\r\n       .catch((err)=>{\r\n        console.log(err)\r\n       })\r\n//for mongodb purpose\r\ntry {\r\n  const token = localStorage.getItem('token');\r\n  console.log(token)\r\n  const headers = {\r\n    'auth-token': token,\r\n    'Content-Type': 'application/json'\r\n  };\r\n  console.log(title,link)\r\n  const response = await fetch('http://localhost:8000/api/image', {\r\n    method: 'POST',\r\n    headers: headers,\r\n    body: JSON.stringify({ link: link, title: title }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Error uploading image');\r\n  }\r\n\r\n  \r\n} catch (error) {\r\n  console.error('Error uploading image:', error);\r\n}\r\n\r\n    }\r\n  return (\r\n    <>\r\n    <form onSubmit={HandleSubmit}>\r\n      <div className='mycard'>\r\n      <div className='card res-card'>\r\n      <h2>Upload the image</h2>\r\n      <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Enter title\" />\r\n        <input type=\"file\"  onChange={(e)=>console.log(setimage(e.target.files[0]))}/>\r\n        <button type='submit'>upload</button>\r\n      </div>\r\n      </div>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}