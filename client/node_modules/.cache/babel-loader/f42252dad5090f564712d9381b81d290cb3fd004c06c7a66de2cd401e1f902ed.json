{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\PictureInsert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PictureInsert = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const formDataToSend = new FormData();\n      formDataToSend.append('title', formData.title); // Only title in formData\n\n      const file = document.querySelector('input[type=\"file\"]').files[0];\n      if (!file) throw new Error('No file selected');\n      const cloudinaryData = new FormData();\n      cloudinaryData.append('file', file);\n      cloudinaryData.append('upload_preset', 'images__preset');\n      cloudinaryData.append('cloud_name', 'dntzl5ras');\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\n        method: 'POST',\n        body: cloudinaryData\n      });\n      if (!response.ok) {\n        throw new Error('Error uploading image to Cloudinary');\n      }\n      const cloudinaryResponse = await response.json();\n      console.log(cloudinaryResponse.secure_url);\n      formDataToSend.append('cloudinaryLink', cloudinaryResponse.secure_url);\n      const headers = {\n        'auth-token': token\n      };\n      const uploadResponse = await fetch('http://localhost:8000/api/image', {\n        method: 'POST',\n        headers: headers,\n        body: formDataToSend\n      });\n      if (!uploadResponse.ok) {\n        throw new Error('Error uploading image');\n      }\n\n      // Redirect or perform any action after successful image upload\n      navigate('/success'); // Example redirection to a success page\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choose Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PictureInsert, \"emRKDqWsNb2IXbHaC+IVHeTaGLg=\", false, function () {\n  return [useNavigate];\n});\n_c = PictureInsert;\nexport default PictureInsert;\nvar _c;\n$RefreshReg$(_c, \"PictureInsert\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PictureInsert","_s","formData","setFormData","title","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","token","localStorage","getItem","formDataToSend","FormData","append","file","document","querySelector","files","Error","cloudinaryData","response","fetch","method","body","ok","cloudinaryResponse","json","console","log","secure_url","headers","uploadResponse","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/PictureInsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PictureInsert = () => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append('title', formData.title); // Only title in formData\r\n\r\n      const file = document.querySelector('input[type=\"file\"]').files[0];\r\n      if (!file) throw new Error('No file selected');\r\n\r\n      const cloudinaryData = new FormData();\r\n      cloudinaryData.append('file', file);\r\n      cloudinaryData.append('upload_preset', 'images__preset');\r\n      cloudinaryData.append('cloud_name', 'dntzl5ras');\r\n\r\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\r\n        method: 'POST',\r\n        body: cloudinaryData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error uploading image to Cloudinary');\r\n      }\r\n\r\n      const cloudinaryResponse = await response.json();\r\n      console.log(cloudinaryResponse.secure_url);\r\n\r\n      formDataToSend.append('cloudinaryLink', cloudinaryResponse.secure_url);\r\n\r\n      const headers = {\r\n        'auth-token': token,\r\n      };\r\n\r\n      const uploadResponse = await fetch('http://localhost:8000/api/image', {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: formDataToSend\r\n      });\r\n\r\n      if (!uploadResponse.ok) {\r\n        throw new Error('Error uploading image');\r\n      }\r\n\r\n      // Redirect or perform any action after successful image upload\r\n      navigate('/success'); // Example redirection to a success page\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Choose Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload Image</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PictureInsert;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}