{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\PictureInsert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PictureInsert = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    link: ''\n  });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', 'images__preset');\n      formData.append('cloud_name', 'dntzl5ras');\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setFormData({\n        ...formData,\n        link: data.secure_url\n      });\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const formDataWithImage = new FormData();\n      formDataWithImage.append('file', formData.link);\n      formDataWithImage.append('upload_preset', 'images__preset');\n      formDataWithImage.append('cloud_name', 'dntzl5ras');\n      formDataWithImage.append('title', formData.title);\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\n        method: 'POST',\n        body: formDataWithImage\n      });\n      if (!response.ok) {\n        throw new Error('Error uploading image to Cloudinary');\n      }\n      const imageData = await response.json();\n      const imageUrl = imageData.secure_url;\n      const responseImageUpload = await fetch('http://localhost:8000/api/image', {\n        method: 'POST',\n        headers: {\n          'auth-token': token\n        },\n        body: JSON.stringify({\n          title: formData.title,\n          link: imageUrl\n        })\n      });\n      if (!responseImageUpload.ok) {\n        throw new Error('Error uploading image to your server');\n      }\n      setMessage('Image uploaded successfully');\n    } catch (error) {\n      setMessage('Error uploading image');\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choose Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(PictureInsert, \"6SLpQA3yxLWIZh0sEDWMPH+QHi0=\", false, function () {\n  return [useNavigate];\n});\n_c = PictureInsert;\nexport default PictureInsert;\nvar _c;\n$RefreshReg$(_c, \"PictureInsert\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PictureInsert","_s","formData","setFormData","title","link","message","setMessage","navigate","handleChange","e","target","name","value","handleImageUpload","file","files","FormData","append","response","fetch","method","body","data","json","secure_url","error","console","handleSubmit","preventDefault","token","localStorage","getItem","formDataWithImage","ok","Error","imageData","imageUrl","responseImageUpload","headers","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/PictureInsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PictureInsert = () => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    link: '',\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('upload_preset', 'images__preset');\r\n      formData.append('cloud_name', 'dntzl5ras');\r\n\r\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      setFormData({ ...formData, link: data.secure_url });\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const formDataWithImage = new FormData();\r\n      formDataWithImage.append('file', formData.link);\r\n      formDataWithImage.append('upload_preset', 'images__preset');\r\n      formDataWithImage.append('cloud_name', 'dntzl5ras');\r\n      formDataWithImage.append('title', formData.title);\r\n\r\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\r\n        method: 'POST',\r\n        body: formDataWithImage\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error uploading image to Cloudinary');\r\n      }\r\n\r\n      const imageData = await response.json();\r\n      const imageUrl = imageData.secure_url;\r\n\r\n      const responseImageUpload = await fetch('http://localhost:8000/api/image', {\r\n        method: 'POST',\r\n        headers: {\r\n          'auth-token': token\r\n        },\r\n        body: JSON.stringify({ title: formData.title, link: imageUrl })\r\n      });\r\n\r\n      if (!responseImageUpload.ok) {\r\n        throw new Error('Error uploading image to your server');\r\n      }\r\n\r\n      setMessage('Image uploaded successfully');\r\n    } catch (error) {\r\n      setMessage('Error uploading image');\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Choose Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload Image</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PictureInsert;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOJ,CAAC,IAAK;IACrC,MAAMK,IAAI,GAAGL,CAAC,CAACC,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACD,IAAI,EAAE;IAEX,IAAI;MACF,MAAMb,QAAQ,GAAG,IAAIe,QAAQ,CAAC,CAAC;MAC/Bf,QAAQ,CAACgB,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAC7Bb,QAAQ,CAACgB,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;MAClDhB,QAAQ,CAACgB,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;MAE1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;QACrFC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEpB;MACR,CAAC,CAAC;MACF,MAAMqB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCrB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,IAAI,EAAEkB,IAAI,CAACE;MAAW,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOlB,CAAC,IAAK;IAChCA,CAAC,CAACmB,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,iBAAiB,GAAG,IAAIhB,QAAQ,CAAC,CAAC;MACxCgB,iBAAiB,CAACf,MAAM,CAAC,MAAM,EAAEhB,QAAQ,CAACG,IAAI,CAAC;MAC/C4B,iBAAiB,CAACf,MAAM,CAAC,eAAe,EAAE,gBAAgB,CAAC;MAC3De,iBAAiB,CAACf,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;MACnDe,iBAAiB,CAACf,MAAM,CAAC,OAAO,EAAEhB,QAAQ,CAACE,KAAK,CAAC;MAEjD,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;QACrFC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEW;MACR,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACe,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MACxD;MAEA,MAAMC,SAAS,GAAG,MAAMjB,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAMa,QAAQ,GAAGD,SAAS,CAACX,UAAU;MAErC,MAAMa,mBAAmB,GAAG,MAAMlB,KAAK,CAAC,iCAAiC,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdkB,OAAO,EAAE;UACP,YAAY,EAAET;QAChB,CAAC;QACDR,IAAI,EAAEkB,IAAI,CAACC,SAAS,CAAC;UAAErC,KAAK,EAAEF,QAAQ,CAACE,KAAK;UAAEC,IAAI,EAAEgC;QAAS,CAAC;MAChE,CAAC,CAAC;MAEF,IAAI,CAACC,mBAAmB,CAACJ,EAAE,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;MACzD;MAEA5B,UAAU,CAAC,6BAA6B,CAAC;IAC3C,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdnB,UAAU,CAAC,uBAAuB,CAAC;MACnCoB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA2C,QAAA,gBACE3C,OAAA;MAAA2C,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB/C,OAAA;MAAMgD,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3B3C,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAA2C,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrB/C,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXpC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEX,QAAQ,CAACE,KAAM;UACtB6C,QAAQ,EAAExC;QAAa;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN/C,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAA2C,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5B/C,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXE,MAAM,EAAC,SAAS;UAChBD,QAAQ,EAAEnC;QAAkB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN/C,OAAA;QAAQiD,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACNxC,OAAO,iBAAIP,OAAA;MAAA2C,QAAA,EAAIpC;IAAO;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAC7C,EAAA,CApGID,aAAa;EAAA,QAMAH,WAAW;AAAA;AAAAsD,EAAA,GANxBnD,aAAa;AAsGnB,eAAeA,aAAa;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}