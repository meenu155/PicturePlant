{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Get the authentication token from local storage\n      const response = await axios.post('http://localhost:8000/api/image/displayimages', {}, {\n        headers: {\n          'auth-token': token // Send the token with the request ,\n          ,\n          'Content-Type': 'application/json'\n        }\n      });\n      setImages(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: image.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.link,\n          alt: image.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Display","_s","images","setImages","fetchImages","token","localStorage","getItem","response","post","headers","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","image","index","title","src","link","alt","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Display = () => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // Get the authentication token from local storage\r\n      const response = await axios.post('http://localhost:8000/api/image/displayimages', {}, {\r\n        headers: {\r\n          'auth-token': token // Send the token with the request ,\r\n         , 'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setImages(response.data);\r\n      console.log(response.data)\r\n    } catch (error) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Uploaded Images</h2>\r\n      <div className=\"image-container\">\r\n        {/* Map over the images array and render an <img> element for each image */}\r\n        {images.map((image, index) => (\r\n          <div key={index} className=\"image-item\">\r\n            <h3>{image.title}</h3>\r\n            <img src={image.link} alt={image.title} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,+CAA+C,EAAE,CAAC,CAAC,EAAE;QACrFC,OAAO,EAAE;UACP,YAAY,EAAEL,KAAK,CAAC;UAAA;UACnB,cAAc,EAAE;QACnB;MACF,CAAC,CAAC;MACFF,SAAS,CAACK,QAAQ,CAACG,IAAI,CAAC;MACxBC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAE7Bb,MAAM,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBxB,OAAA;QAAiBqB,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACrChB,OAAA;UAAAgB,QAAA,EAAKO,KAAK,CAACE;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBpB,OAAA;UAAK0B,GAAG,EAAEH,KAAK,CAACI,IAAK;UAACC,GAAG,EAAEL,KAAK,CAACE;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFlCI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}