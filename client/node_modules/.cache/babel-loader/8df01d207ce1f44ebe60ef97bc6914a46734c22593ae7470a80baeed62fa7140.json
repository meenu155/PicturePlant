{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Insert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Insert() {\n  _s();\n  const [image, setimage] = useState(null);\n  const UploadFile = async type => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    console.log(data);\n    try {\n      let cloudname = \"dntzl5ras\";\n      let resourcetype = \"image\";\n      let api = `https://api.cloudinary.com/v1_1/${cloudname}/image/upload`;\n      const res = await axios.post(api, data);\n      const {\n        secure_url\n      } = res.data;\n      return secure_url;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const HandleSubmit = async e => {\n    e.preventDefault();\n    try {\n      //upload image file \n      const imageUrl = await UploadFile(\"image\");\n      console.log(imageUrl, \"the url of the image\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleFileChange = e => {\n    // Update the image state when a file is selected\n    setimage(e.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: HandleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => console.log(setimage(e.target.files[0]))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Insert, \"aK6wPElRMQJxHsxqyQ9coGGqo+c=\");\n_c = Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Insert","_s","image","setimage","UploadFile","type","data","FormData","append","console","log","cloudname","resourcetype","api","res","post","secure_url","error","HandleSubmit","e","preventDefault","imageUrl","handleFileChange","target","files","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Insert.js"],"sourcesContent":["import React ,{useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function Insert() {\r\n    const [image,setimage]=useState(null)\r\n    const UploadFile=async(type)=>{\r\nconst data=new FormData()\r\ndata.append(\"file\",image)\r\nconsole.log(data)\r\ntry{\r\nlet cloudname=\"dntzl5ras\";\r\nlet resourcetype=\"image\";\r\nlet api=`https://api.cloudinary.com/v1_1/${cloudname}/image/upload`;\r\nconst res=await axios.post(api,data);\r\nconst {secure_url}=res.data;\r\nreturn secure_url\r\n\r\n}\r\ncatch(error){\r\n    console.log(error)\r\n}\r\n\r\n    }\r\n    const HandleSubmit=async(e)=>{\r\n        e.preventDefault()\r\n        try{\r\n//upload image file \r\nconst imageUrl=await UploadFile(\"image\")\r\nconsole.log(imageUrl,\"the url of the image\")\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    const handleFileChange = (e) => {\r\n        // Update the image state when a file is selected\r\n        setimage(e.target.files[0]);\r\n      };\r\n  return (\r\n    <form onSubmit={HandleSubmit}>\r\n      <div>\r\n        <input type=\"file\"  onChange={(e)=>console.log(setimage(e.target.files[0]))}/>\r\n        <button type='submit'>upload</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAMQ,UAAU,GAAC,MAAMC,IAAI,IAAG;IAClC,MAAMC,IAAI,GAAC,IAAIC,QAAQ,CAAC,CAAC;IACzBD,IAAI,CAACE,MAAM,CAAC,MAAM,EAACN,KAAK,CAAC;IACzBO,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,IAAG;MACH,IAAIK,SAAS,GAAC,WAAW;MACzB,IAAIC,YAAY,GAAC,OAAO;MACxB,IAAIC,GAAG,GAAE,mCAAkCF,SAAU,eAAc;MACnE,MAAMG,GAAG,GAAC,MAAMjB,KAAK,CAACkB,IAAI,CAACF,GAAG,EAACP,IAAI,CAAC;MACpC,MAAM;QAACU;MAAU,CAAC,GAACF,GAAG,CAACR,IAAI;MAC3B,OAAOU,UAAU;IAEjB,CAAC,CACD,OAAMC,KAAK,EAAC;MACRR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACtB;EAEI,CAAC;EACD,MAAMC,YAAY,GAAC,MAAMC,CAAC,IAAG;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACX;MACA,MAAMC,QAAQ,GAAC,MAAMjB,UAAU,CAAC,OAAO,CAAC;MACxCK,OAAO,CAACC,GAAG,CAACW,QAAQ,EAAC,sBAAsB,CAAC;IACpC,CAAC,CACD,OAAMJ,KAAK,EAAC;MACRR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACtB;EAEJ,CAAC;EACD,MAAMK,gBAAgB,GAAIH,CAAC,IAAK;IAC5B;IACAhB,QAAQ,CAACgB,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EACL,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,eAC3B3B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAOM,IAAI,EAAC,MAAM;QAAEsB,QAAQ,EAAGR,CAAC,IAAGV,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACgB,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9EhC,OAAA;QAAQM,IAAI,EAAC,QAAQ;QAAAqB,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAC9B,EAAA,CA5CuBD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}