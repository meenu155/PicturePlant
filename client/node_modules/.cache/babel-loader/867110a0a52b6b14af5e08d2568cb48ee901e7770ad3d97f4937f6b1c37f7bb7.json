{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\PictureInsert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PictureInsert = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    cloudinaryLink: '' // Include cloudinaryLink in the form data\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const headers = {\n        'auth-token': token,\n        'Content-Type': 'application/json'\n      };\n      const response = await fetch('http://localhost:8000/api/image', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Error uploading image');\n      }\n      setMessage('Image uploaded successfully');\n      // Redirect to the desired page after successful upload\n      navigate('/success');\n    } catch (error) {\n      setMessage('Error uploading image');\n      console.error('Error uploading image:', error);\n    }\n  };\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', 'images__preset');\n      formData.append('cloud_name', 'dntzl5ras');\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Error uploading image to Cloudinary');\n      }\n      const data = await response.json();\n      console.log(data.secure_url);\n      // Update the formData with the Cloudinary link\n      setFormData({\n        ...formData,\n        cloudinaryLink: data.secure_url\n      });\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choose Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(PictureInsert, \"0sB0V5h+1vmPfIl86MHXJ/roOzY=\", false, function () {\n  return [useNavigate];\n});\n_c = PictureInsert;\nexport default PictureInsert;\nvar _c;\n$RefreshReg$(_c, \"PictureInsert\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PictureInsert","_s","formData","setFormData","title","cloudinaryLink","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","token","localStorage","getItem","headers","response","fetch","method","body","JSON","stringify","ok","Error","setMessage","error","console","handleImageUpload","file","files","FormData","append","data","json","log","secure_url","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/PictureInsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PictureInsert = () => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    cloudinaryLink: '', // Include cloudinaryLink in the form data\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const headers = {\r\n        'auth-token': token,\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      const response = await fetch('http://localhost:8000/api/image', {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error uploading image');\r\n      }\r\n\r\n      setMessage('Image uploaded successfully');\r\n      // Redirect to the desired page after successful upload\r\n      navigate('/success');\r\n    } catch (error) {\r\n      setMessage('Error uploading image');\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('upload_preset', 'images__preset');\r\n      formData.append('cloud_name', 'dntzl5ras');\r\n\r\n      const response = await fetch('https://api.cloudinary.com/v1_1/dntzl5ras/image/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error uploading image to Cloudinary');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data.secure_url);\r\n      // Update the formData with the Cloudinary link\r\n      setFormData({ ...formData, cloudinaryLink: data.secure_url });\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Choose Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload Image</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PictureInsert;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}