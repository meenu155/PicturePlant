{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Insert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Insert() {\n  _s();\n  const [image, setImage] = useState(\"\");\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState(\"\");\n  const navigate = useNavigate();\n  const HandleSubmit = async e => {\n    e.preventDefault();\n\n    // Upload image to Cloudinary\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", \"images__preset\");\n      formData.append(\"cloud_name\", \"dntzl5ras\");\n      const response = await fetch(\"https://api.cloudinary.com/v1_1/dntzl5ras/image/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Error uploading image to Cloudinary');\n      }\n      const data = await response.json();\n      console.log(data.secure_url); // the link\n      setLink(data.secure_url);\n    } catch (error) {\n      console.error('Error uploading image to Cloudinary:', error);\n      // Handle error appropriately\n    }\n\n    // Send image link and title to backend for MongoDB\n    try {\n      const token = localStorage.getItem('token');\n      const headers = {\n        'auth-token': token,\n        'Content-Type': 'application/json'\n      };\n      const response = await fetch('http://localhost:8000/api/image', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n          link: link,\n          title: title\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      if (json.success) {\n        navigate('/Display'); // Use navigate to redirect\n      } else {\n        alert('Error in posting image');\n      }\n      if (!response.ok) {\n        throw new Error('Error posting image to backend');\n      }\n    } catch (error) {\n      console.error('Error posting image to backend:', error);\n      // Handle error appropriately\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: HandleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mycard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card res-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload the image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Enter title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Insert, \"21Za+N1gJjLDm5NTXV2v0oNK7Mk=\", false, function () {\n  return [useNavigate];\n});\n_c = Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Insert","_s","image","setImage","title","setTitle","link","setLink","navigate","HandleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","console","log","secure_url","error","token","localStorage","getItem","headers","JSON","stringify","success","alert","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","files","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Insert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function Insert() {\r\n    const [image, setImage] = useState(\"\");\r\n    const [title, setTitle] = useState('');\r\n    const [link, setLink] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const HandleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Upload image to Cloudinary\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", image);\r\n            formData.append(\"upload_preset\", \"images__preset\");\r\n            formData.append(\"cloud_name\", \"dntzl5ras\");\r\n\r\n            const response = await fetch(\"https://api.cloudinary.com/v1_1/dntzl5ras/image/upload\", {\r\n                method: \"POST\",\r\n                body: formData\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error uploading image to Cloudinary');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(data.secure_url); // the link\r\n            setLink(data.secure_url);\r\n        } catch (error) {\r\n            console.error('Error uploading image to Cloudinary:', error);\r\n            // Handle error appropriately\r\n        }\r\n\r\n        // Send image link and title to backend for MongoDB\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const headers = {\r\n                'auth-token': token,\r\n                'Content-Type': 'application/json'\r\n            };\r\n\r\n            const response = await fetch('http://localhost:8000/api/image', {\r\n                method: 'POST',\r\n                headers: headers,\r\n                body: JSON.stringify({ link: link, title: title }),\r\n            });\r\n\r\n            const json = await response.json();\r\n            console.log(json);\r\n            if (json.success) {\r\n                navigate('/Display'); // Use navigate to redirect\r\n            } else {\r\n                alert('Error in posting image');\r\n            }\r\n            if (!response.ok) {\r\n                throw new Error('Error posting image to backend');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error posting image to backend:', error);\r\n            // Handle error appropriately\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={HandleSubmit}>\r\n                <div className='mycard'>\r\n                    <div className='card res-card'>\r\n                        <h2>Upload the image</h2>\r\n                        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Enter title\" />\r\n                        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                        <button type='submit'>upload</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}