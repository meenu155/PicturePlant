{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\Insert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Insert() {\n  _s();\n  const [image, setImage] = useState(null);\n  const uploadFile = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    try {\n      let cloudname = \"dntzl5ras\";\n      const api = `https://api.cloudinary.com/v1_1/${cloudname}/image/upload`;\n      const response = await fetch(api, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload image');\n      }\n      const data = await response.json();\n      const {\n        url\n      } = data;\n      return url;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const imageUrl = await uploadFile();\n      console.log('Image URL:', imageUrl);\n    } catch (error) {\n      console.error('Error handling submit:', error);\n    }\n  };\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Insert, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n_c = Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Insert","_s","image","setImage","uploadFile","formData","FormData","append","cloudname","api","response","fetch","method","body","ok","Error","data","json","url","error","console","handleSubmit","e","preventDefault","imageUrl","log","handleFileChange","target","files","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/Insert.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Insert() {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const uploadFile = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n\r\n    try {\r\n      let cloudname = \"dntzl5ras\";\r\n      const api = `https://api.cloudinary.com/v1_1/${cloudname}/image/upload`;\r\n\r\n      const response = await fetch(api, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload image');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const { url } = data;\r\n      return url;\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const imageUrl = await uploadFile();\r\n      console.log('Image URL:', imageUrl);\r\n    } catch (error) {\r\n      console.error('Error handling submit:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Upload</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,KAAK,CAAC;IAE9B,IAAI;MACF,IAAIM,SAAS,GAAG,WAAW;MAC3B,MAAMC,GAAG,GAAI,mCAAkCD,SAAU,eAAc;MAEvE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACR,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC;MAAI,CAAC,GAAGF,IAAI;MACpB,OAAOE,GAAG;IACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,UAAU,CAAC,CAAC;MACnCgB,OAAO,CAACK,GAAG,CAAC,YAAY,EAAED,QAAQ,CAAC;IACrC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAIJ,CAAC,IAAK;IAC9BnB,QAAQ,CAACmB,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACE7B,OAAA;IAAM8B,QAAQ,EAAER,YAAa;IAAAS,QAAA,eAC3B/B,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEN;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDrC,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACnC,EAAA,CAnDuBD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}