{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\webproj\\\\myblinkit\\\\client\\\\src\\\\Componets\\\\PictureInsert.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PictureInsert = () => {\n  _s();\n  const [image, setImage] = useState(null);\n\n  // Function to handle file selection\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle image upload or any other processing here\n    console.log('Image:', image);\n    // Reset the input field\n    setImage(null);\n    navigate('/PictureInsert');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card res-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Insert Picture \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"card res-card \",\n          type: \"file\",\n          accept: \"image/*\" // Allow only image files\n          ,\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn waves-effect waves-light #64b5f6 yellow darken-1 \",\n          type: \"submit\",\n          children: \"Insert Picture \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 36\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 14\n  }, this);\n};\n_s(PictureInsert, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n_c = PictureInsert;\nexport default PictureInsert;\nvar _c;\n$RefreshReg$(_c, \"PictureInsert\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PictureInsert","_s","image","setImage","handleImageChange","e","file","target","files","handleSubmit","preventDefault","console","log","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/webproj/myblinkit/client/src/Componets/PictureInsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PictureInsert = () => {\r\n    const [image, setImage] = useState(null);\r\n\r\n    // Function to handle file selection\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        setImage(file);\r\n    };\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Handle image upload or any other processing here\r\n        console.log('Image:', image);\r\n        // Reset the input field\r\n        setImage(null);\r\n        navigate('/PictureInsert');\r\n    };\r\n\r\n    return ( <\r\n        div className = 'mycard' >\r\n        <\r\n        div className = \"card res-card\" >\r\n        <\r\n        h2 > Insert Picture < /h2> <\r\n        form onSubmit = { handleSubmit } >\r\n        <\r\n        input className = \"card res-card \"\r\n        type = \"file\"\r\n        accept = \"image/*\" // Allow only image files\r\n        onChange = { handleImageChange }\r\n        /> <\r\n        button className = \"btn waves-effect waves-light #64b5f6 yellow darken-1 \"\r\n        type = \"submit\" >\r\n        Insert Picture <\r\n        /button> <\r\n        /form> <\r\n        /div> <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default PictureInsert;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BL,QAAQ,CAACG,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEV,KAAK,CAAC;IAC5B;IACAC,QAAQ,CAAC,IAAI,CAAC;IACdU,QAAQ,CAAC,gBAAgB,CAAC;EAC9B,CAAC;EAED,oBAASd,OAAA;IACDe,SAAS,EAAG,QAAQ;IAAAC,QAAA,gBACxBhB,OAAA;MACIe,SAAS,EAAG,eAAe;MAAAC,QAAA,gBAC/BhB,OAAA;QAAAgB,QAAA,EACI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC,eAAApB,OAAA;QACtBqB,QAAQ,EAAKX,YAAc;QAAAM,QAAA,gBAChChB,OAAA;UACMe,SAAS,EAAG,gBAAgB;UAClCO,IAAI,EAAG,MAAM;UACbC,MAAM,EAAG,SAAS,CAAC;UAAA;UACnBC,QAAQ,EAAKnB;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,KAAC,eAAApB,OAAA;UACIe,SAAS,EAAG,uDAAuD;UAC1EO,IAAI,EAAG,QAAQ;UAAAN,QAAA,EAAE;QACF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAAAlB,EAAA,CAxCKD,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}